#include "App.hpp"
#include "Autogenerated_JSONData.hpp"

void APP::Init()
{
	// helper Lambda
	auto find_value_by_key = [](std::string_view key) -> std::string_view {
		for (const auto& item : json_data) {
			if (std::get<0>(item) == key) {
				return std::get<1>(item);
			}
		}
		LOG("[ERROR] Error AutoGenerated JSON %s , not found\n", key);
		return {};
		};

	const auto str = find_value_by_key("Config.json");
	const Document doc = DataManager::Create_JSON_From_String(str);

	if (!doc.HasMember("FileManager") || !doc["FileManager"].IsObject()) {
		LOG("[ERROR] FileManager not defined in Config.json\n");
		return;
	}
	FILEMANAGER.Init(doc["FileManager"]);


	if (!doc.HasMember("DataManager") || !doc["DataManager"].IsObject()) {
		LOG("[ERROR] DataManager not defined in Config.json\n");
		return;
	}
	DATAMANAGER.Init(doc["DataManager"]);
}

void APP::Run()
{
	while (1)
	{
		//...
	}
}